// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package source

import (
	"github.com/conduitio/conduit-commons/config"
)

func (Config) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		"cdcMode": {
			Default:     "auto",
			Description: "CDCMode determines how the connector should listen to changes.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationInclusion{List: []string{"auto", "logrepl"}},
			},
		},
		"logrepl.autoCleanup": {
			Default:     "true",
			Description: "LogreplAutoCleanup determines if the replication slot and publication should be\nremoved when the connector is deleted.",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		"logrepl.publicationName": {
			Default:     "conduitpub",
			Description: "LogreplPublicationName determines the publication name in case the\nconnector uses logical replication to listen to changes (see CDCMode).",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"logrepl.slotName": {
			Default:     "conduitslot",
			Description: "LogreplSlotName determines the replication slot name in case the\nconnector uses logical replication to listen to changes (see CDCMode).",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"snapshot.fetchSize": {
			Default:     "50000",
			Description: "Snapshot fetcher size determines the number of rows to retrieve at a time.",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		"snapshotMode": {
			Default:     "initial",
			Description: "SnapshotMode is whether the plugin will take a snapshot of the entire table before starting cdc mode.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationInclusion{List: []string{"initial", "never"}},
			},
		},
		"table": {
			Default:     "",
			Description: "Deprecated: use `tables` instead.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"tables": {
			Default:     "",
			Description: "Tables is a List of table names to read from, separated by a comma, e.g.:\"table1,table2\".\nUse \"*\" if you'd like to listen to all tables.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"url": {
			Default:     "",
			Description: "URL is the connection string for the Postgres database.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
	}
}
